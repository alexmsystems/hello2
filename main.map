{"version":3,"file":"main.bundle.js","sources":["webpack:///./src/app/environment.ts","webpack:///./src/app/add/index.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/cources/index.ts","webpack:///./src/app/edit/index.ts","webpack:///./src/app/items/index.ts","webpack:///./src/app/login/index.ts","webpack:///./src/app/no-content/index.ts","webpack:///./src/app/index.ts","webpack:///./src/app/add/add.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.resolver.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/cource.ts","webpack:///./src/app/cources/cources.component.ts","webpack:///./src/app/duration.pipe.ts","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/items/item.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/no-content/no-content.component.ts","webpack:///./src/app/main.service.ts","webpack:///./src/app/app.component.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/rxjs/add/observable/of.js","webpack:///./src/app/app.component.css?e3a3","webpack:///./src/main.browser.ts"],"sourcesContent":["\n// Angular 2\n// rc2 workaround\nimport { enableDebugTools, disableDebugTools } from '@angular/platform-browser';\nimport { enableProdMode, ApplicationRef } from '@angular/core';\n// Environment Providers\nlet PROVIDERS: any[] = [\n  // common env directives\n];\n\n// Angular debug tools in the dev console\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\nlet _decorateModuleRef = function identity<T>(value: T): T { return value; };\n\nif ('production' === ENV) {\n  enableProdMode();\n\n  // Production\n  _decorateModuleRef = (modRef: any) => {\n    disableDebugTools();\n\n    return modRef;\n  };\n\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in production\n  ];\n\n} else {\n\n  _decorateModuleRef = (modRef: any) => {\n    const appRef = modRef.injector.get(ApplicationRef);\n    const cmpRef = appRef.components[0];\n\n    let _ng = (<any>window).ng;\n    enableDebugTools(cmpRef);\n    (<any>window).ng.probe = _ng.probe;\n    (<any>window).ng.coreTokens = _ng.coreTokens;\n    return modRef;\n  };\n\n  // Development\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in development\n  ];\n\n}\n\nexport const decorateModuleRef = _decorateModuleRef;\n\nexport const ENV_PROVIDERS = [\n  ...PROVIDERS\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/environment.ts","export * from './add.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/add/index.ts","import { Injectable } from '@angular/core';\n\nexport type InternalStateType = {\n  [key: string]: any\n};\n\n@Injectable()\nexport class AppState {\n  _state: InternalStateType = { };\n\n  constructor() {\n\n  }\n\n  // already return a clone of the current state\n  get state() {\n    return this._state = this._clone(this._state);\n  }\n  // never allow mutation\n  set state(value) {\n    throw new Error('do not mutate the `.state` directly');\n  }\n\n\n  get(prop?: any) {\n    // use our state getter for the clone\n    const state = this.state;\n    return state.hasOwnProperty(prop) ? state[prop] : state;\n  }\n\n  set(prop: string, value: any) {\n    // internally mutate our state\n    return this._state[prop] = value;\n  }\n\n\n  private _clone(object: InternalStateType) {\n    // simple object clone\n    return JSON.parse(JSON.stringify( object ));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.service.ts","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from \"@angular/router\";\nimport {Observable} from \"rxjs/Rx\";\nimport {Injectable} from \"@angular/core\";\nimport {DataService} from \"./main.service\"\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n\n     constructor(private router:Router,private dataService: DataService) {\n\n  }\n canActivate():boolean {\n\n    var isLoggedIn = false;//Math.random()>.5;\n    isLoggedIn = this.dataService.isAuth();\n    if (!isLoggedIn) {\n\n      this.router.navigate(['login']);\n\n    }\n\n    return isLoggedIn;\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/auth.guard.ts","export * from './cources.component';\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/cources/index.ts","export * from './edit.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/edit/index.ts","export * from './item.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/items/index.ts","export * from './login.component';\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/login/index.ts","export * from './no-content.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/no-content/index.ts","// App\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/index.ts","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {DataService} from '../main.service';\nimport {Cource} from '../cource';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'add',\n  styles: [`       \n    `],\n    template: `<form #myForm=\"ngForm\" novalidate (ngSubmit)=\"onSubmit(myForm)\">\n                   \n                        <label>Название курса</label>\n                        <input  name=\"name\" ngModel required />\n                        <br>\n                        <label>Описание курса</label>\n                        <input name=\"description\" ngModel />                       \n                        <br>\n                        <label>Дата курса</label>\n                        <input name=\"courceDate\" ngModel />                       \n                        <br>\n                        <label>Продолжительность курса</label>\n                        <input  (keypress)=\"validate($event)\" name=\"duration\" ngModel required />\n                        <br>\n                        <input type=\"submit\" [disabled]=\"myForm.invalid\" value=\"Отправить\" />                                 \n                </form>`,\n   \n})\nexport class AddComponent {  \n  constructor(private router: Router, public route: ActivatedRoute,private dataService: DataService) { } \n\n onSubmit(form: NgForm){\n        this.dataService.addData(form.value.name,form.value.courceDate,form.value.description,form.value.duration);\n        this.router.navigate(['/cources']);\n    }\nvalidate(event: any) {\n    const pattern = /[0-9]/;\n    let inputChar = String.fromCharCode(event.charCode);   \n    if (!pattern.test(inputChar)) {      \n          event.preventDefault();\n      }\n    } \n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/add/add.component.ts","/*\n * Angular 2 decorators and services\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\n\nimport { AppState } from './app.service';\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    require('./app.component.css')\n  ],\n  template: `\n    <nav>\n      <span>\n        <a [routerLink]=\" ['./'] \">\n          Index\n        </a>\n      </span>      \n      |\n      <span>\n        <a [routerLink]=\" ['./cources'] \">\n          Cources\n        </a>\n      </span>      \n      |\n      <span>\n        <a [routerLink]=\" ['./cources/new'] \">\n          Add new cource\n        </a>\n      </span>\n      |\n      <span>\n        <a [routerLink]=\" ['./login'] \">\n          Login\n        </a>\n      </span>\n    </nav>\n\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n\n\n    <footer> Cources 2017    </footer>\n  `\n})\nexport class AppComponent {  \n\n  constructor(\n    public appState: AppState) {\n\n  }\n\n  ngOnInit() {\n    console.log('Initial App State', this.appState.state);\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.component.ts","import { NgModule, ApplicationRef } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, PreloadAllModules } from '@angular/router';\nimport { removeNgStyles, createNewHosts, createInputTransfer } from '@angularclass/hmr';\n\n/*\n * Platform and Environment providers/directives/pipes\n */\nimport { ENV_PROVIDERS } from './environment';\nimport { ROUTES } from './app.routes';\n// App is our top level component\nimport { AppComponent } from './app.component';\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\nimport { AppState, InternalStateType } from './app.service';\nimport { CourcesComponent } from './cources';\nimport { AddComponent } from './add';\nimport { LoginComponent } from './login';\nimport { NoContentComponent } from './no-content';\nimport { ItemComponent } from './items';\nimport { EditComponent } from './edit';\nimport {DataService} from './main.service';\nimport { AuthGuard } from './auth.guard';\nimport { DurationFormat } from './duration.pipe';\n\nimport { ExceptionHandler } from 'angular2/src/core/facade/exceptions';\nimport { CustomExceptionHandler } from './exception.handler';\n\n// Application wide providers\nconst APP_PROVIDERS = [\n  ...APP_RESOLVER_PROVIDERS,\n  AppState,\n  DataService,\n  AuthGuard\n];\n\ntype StoreType = {\n  state: InternalStateType,\n  restoreInputValues: () => void,\n  disposeOldHosts: () => void\n};\n\n/**\n * `AppModule` is the main entry point into Angular2's bootstraping process\n */\n//\n\n@NgModule({\n  bootstrap: [ AppComponent],\n  declarations: [\n    AppComponent,\n    AddComponent,\n    CourcesComponent, \n    EditComponent, \n    LoginComponent,\n    ItemComponent,\n    DurationFormat,\n    NoContentComponent,\n   \n  ],\n  imports: [ // import Angular's modules\n    BrowserModule,\n    FormsModule,\n    HttpModule,   \n    RouterModule.forRoot(ROUTES, { useHash: true, preloadingStrategy: PreloadAllModules })\n  ],\n  providers: [ // expose our Services and Providers into Angular's dependency injection\n    ENV_PROVIDERS,\n    APP_PROVIDERS,     \n  ]\n})\nexport class AppModule {\n  constructor(public appRef: ApplicationRef, public appState: AppState) {}\n\n  hmrOnInit(store: StoreType) {\n    if (!store || !store.state) return;\n    console.log('HMR store', JSON.stringify(store, null, 2));\n    // set state\n    this.appState._state = store.state;\n    // set input values\n    if ('restoreInputValues' in store) {\n      let restoreInputValues = store.restoreInputValues;\n      setTimeout(restoreInputValues);\n    }\n\n    this.appRef.tick();\n    delete store.state;\n    delete store.restoreInputValues;\n  }\n\n  hmrOnDestroy(store: StoreType) {\n    const cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\n    // save state\n    const state = this.appState._state;\n    store.state = state;\n    // recreate root elements\n    store.disposeOldHosts = createNewHosts(cmpLocation);\n    // save input values\n    store.restoreInputValues  = createInputTransfer();\n    // remove styles\n    removeNgStyles();\n  }\n\n  hmrAfterDestroy(store: StoreType) {\n    // display new elements\n    store.disposeOldHosts();\n    delete store.disposeOldHosts;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.module.ts","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class DataResolver implements Resolve<any> {\n  constructor() {\n\n  }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return Observable.of({ res: 'I am data'});\n  }\n}\n\n// an array of services to resolve routes with data\nexport const APP_RESOLVER_PROVIDERS = [\n  DataResolver\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.resolver.ts","import { Routes, RouterModule } from '@angular/router';\nimport { AddComponent } from './add';\nimport { CourcesComponent } from './cources';\nimport { LoginComponent } from './login';\nimport { NoContentComponent } from './no-content';\nimport { ItemComponent  } from './items';\nimport { EditComponent  } from './edit';\nimport { DataResolver } from './app.resolver';\nimport { AuthGuard } from './auth.guard';\n\n\nexport const ROUTES: Routes = [ \n  { path: 'cources/new', component: AddComponent , canActivate: [AuthGuard]},\n  { path: '', component: CourcesComponent , canActivate: [AuthGuard]},\n  { path: 'cources', component: CourcesComponent , canActivate: [AuthGuard]},\n  { path: 'cources/:id', component: ItemComponent , canActivate: [AuthGuard]},\n  { path: 'cources/:id/edit', component: EditComponent , canActivate: [AuthGuard]},\n  { path: 'login', component: LoginComponent },  \n  { path: '**',    component: NoContentComponent }\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/app.routes.ts","export class Cource{\n     \n    constructor(public id: number, public name: string, public courceDate: string, public description: string, public duration: number) { }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/cource.ts","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {DataService} from '../main.service';\nimport {Cource} from '../cource';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'cources',\n  styles: [`.box1 {\n    border: solid 1px #006699;\n    padding: 20px;\n    background: #f3f3f3;\n    border-radius: 5px;\n  }\n\n  .todos input.textfield {\n    width: 480px;\n    height: 36px;\n    margin-right: 20px;\n    font-size: 1.4em;\n    vertical-align: top;\n  }\n\n  .todos input.checkbox {\n    width: 20px;\n    height: 20px;\n  }\n\n  .todos .checked {\n    text-decoration: line-through;\n  }\n\n  .todos button {\n    height: 36px;\n    font-size: 1.1em;\n    vertical-align: top;\n    border: solid 1px #999;\n    border-radius: 2px;\n  }\n\n  .todos .delete-icon {\n    diplay: inline-block;\n    cursor: pointer;\n  }\n  `],\n  template: `\n    <h1>Cources</h1>\n    <br><br>\n    {{currentRote}}\n    \n\t<table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Название курса</th>\n                    <th>Дата</th>\n                    <th>Продолжительность</th>\n                    <th>Описание</th>\n                    <th>Ссылка</th>\n                    <th>Редактировать</th>\n                    <th>Удалить</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of items\">\n                    <td>{{item.name}}</td>\n                    <td>{{item.courceDate}}</td>\n                    <td>{{item.duration | duration_format}}</td>\n                    <td>{{item.description}}</td>\n                    <td><a [routerLink]=\" ['/cources' , item.id] \" >Detail {{item.id}}</a></td>\n                    <td><a [routerLink]=\" ['/cources' , item.id, 'edit'] \" >Edit {{item.id}}</a></td>\n                    <td><span (click)=\"deleteItem(item.id)\" >delete</span>                   \n                    </td>\n                </tr>\n            </tbody>\n        </table> \n  `,\n})\nexport class CourcesComponent {\n  localState: any;\n  currentRote: string;\n  items: Cource[] = [];\n  constructor(public route: ActivatedRoute,private dataService: DataService) {\n       \n  }\n/*\nngOnInit() {\n\n    this.route.url.subscribe(urlSegment => {\n\n            console.log(urlSegment)\n\n    });\n\n}\n*/\n  ngOnInit() {\n\t  \n\tthis.items = this.dataService.getData();\n    this.route\n      .data\n      .subscribe((data: any) => {\n        // your resolved data from route\n        this.localState = data.yourData;\n      });\n\n       this.route.url.subscribe(urlSegment => {\n\n            this.currentRote = urlSegment.toString();\n\n    });\n    \n  }\n onSubmit(form: NgForm){\n        console.log(form);\n        this.dataService.addData(form.value.name,form.value.courceDate,form.value.description,form.value.duration);\n    }\n\n deleteItem(id) {\n      var r = confirm(\"Are you sure?\");\n      if (r == true) {\n        this.dataService.deleteData(id);\n      } \n      \n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/cources/cources.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'duration_format'})\r\nexport class DurationFormat implements PipeTransform {\r\n  transform(value: string, args: string[]): any {    \r\n    \r\n   if (!value) return value;\r\n    if (Number(value)==0)\r\n\r\n       return  \"0 ч. 0 мин.\" \r\n     \r\n    else \r\n       return String(Math.ceil(Number(value)/60)-1) + \"ч. \" + String(Number(value)%60) + \"мин.\";\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/duration.pipe.ts","import { Component , OnDestroy} from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {Subscription} from 'rxjs/Subscription';\nimport {DataService} from '../main.service';\nimport {Cource} from '../cource';\nimport { NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'edit',\n  styles: [`\n  `],\n  template: `\n    <h1>Курс ID = {{id}}</h1>\n     <form #myForm=\"ngForm\"  novalidate (ngSubmit)=\"onSubmit(myForm)\">                    \n                        <label>Название курса</label>\n                        <input  [(ngModel)]=\"courceName\" name=\"name\" ngModel required />\n                        <br>\n                        <label>Описание курса</label>\n                        <input  [(ngModel)]=\"courceDescription\" name=\"description\" />                       \n                        <br>\n                        <label>Дата курса</label>\n                        <input  [(ngModel)]=\"courceDate\" name=\"courceDate\" />                       \n                        <br>\n                        <label>Продолжительность курса</label>\n                        <input (keypress)=\"validate($event)\" [(ngModel)]=\"courceDuration\" name=\"duration\" required />  \n                        <input type=\"submit\" [disabled]=\"myForm.invalid\" value=\"Отправить\" />\n                </form>\n  `,\n})\nexport class EditComponent implements OnDestroy {      \n private id: number;\n private routeSubscription: Subscription; \n courceItem: Cource;\n courceName: string;\n courceDescription: string;\n courceDate: string;\n courceDuration: number;\n\n constructor(private router: Router,public route: ActivatedRoute,private dataService: DataService){         \n        this.routeSubscription = route.params.subscribe(params=>this.id=params['id']);\n    }\nngOnDestroy(){\n        this.routeSubscription.unsubscribe();\n    }\nngOnInit() {\n\tthis.courceItem = this.dataService.getItemData(this.id); \n    this.courceName = this.courceItem.name; \n    this.courceDescription = this.courceItem.description;\n    this.courceDate = this.courceItem.courceDate; \n    this.courceDuration = this.courceItem.duration; \n}  \nonSubmit(form: any){\n        this.dataService.editData(this.id,form.value.name,form.value.courceDate,form.value.description,form.value.duration);\n        this.router.navigate(['/cources']);\n    }\nvalidate(event: any) {\n    const pattern = /[0-9]/;\n    let inputChar = String.fromCharCode(event.charCode);   \n    if (!pattern.test(inputChar)) {      \n          event.preventDefault();\n      }\n    }    \n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/edit/edit.component.ts","import { Component , OnDestroy} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Subscription} from 'rxjs/Subscription';\nimport {DataService} from '../main.service';\nimport {Cource} from '../cource';\n\n@Component({\n  selector: 'item',\n  styles: [`\n  `],\n  template: `\n    <h1>Курс ID = {{id}}</h1>\n     <table>\n     <tr><td>Название курса</td><td>{{courceItem.name}}</td></tr>\n     <tr><td>Описание</td><td>{{courceItem.description}}</td></tr>\n     <tr><td>Дата</td><td>{{courceItem.courceDate}}</td></tr>\n     <tr><td>Продолжительность</td><td>{{courceItem.duration}}</td></tr>     \n     </table>\t\n  `,\n})\nexport class ItemComponent implements OnDestroy { \n     \n    private id: number;\n    private routeSubscription: Subscription;\n    localState: any;\n    courceItem: Cource;\n    constructor(public route: ActivatedRoute,private dataService: DataService){\n         \n        this.routeSubscription = route.params.subscribe(params=>this.id=params['id']);\n    }\n    ngOnDestroy(){\n        this.routeSubscription.unsubscribe();\n    }\n    ngOnInit() {  \n\t  \n    console.log('hello `Item` component');\t  \n\tthis.courceItem = this.dataService.getItemData(this.id);  \t\t\n    this.route\n      .data\n      .subscribe((data: any) => {});\n  }  \n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/items/item.component.ts","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {DataService} from '../main.service';\nimport {Cource} from '../cource';\nimport {NgForm} from '@angular/forms';\n\n\n@Component({\n  selector: 'login',\n  styles: [`\n    `],\n    template: `<form #myForm=\"ngForm\" novalidate (ngSubmit)=\"onSubmit(myForm)\">\n                        <label>Имя пользователя</label>\n                        <input (keypress)=\"validate($event)\"  name=\"name\" ngModel required />\n                        <br><label>Пароль</label>\n                        <input type=\"password\" name=\"pass\" ngModel required />\n                        <br><input type=\"submit\" [disabled]=\"myForm.invalid\" value=\"Отправить\" />\n                </form>`\n})\nexport class LoginComponent {  \n  constructor(private router: Router, private dataService: DataService) {\n}\n onSubmit(form: NgForm){\n        console.log(form);\n        this.dataService.logIn(form.value.name,form.value.pass);\n        this.router.navigate(['/cources']);\n    }\n  \n validate(event: any) {\n    const pattern = /[a-zA-Z_]/;\n    let inputChar = String.fromCharCode(event.charCode);   \n    if (!pattern.test(inputChar)) {      \n      event.preventDefault();\n    }\n}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/login/login.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'no-content',\n  template: `\n    <div>\n      <h1>404: page missing</h1>\n    </div>\n  `\n})\nexport class NoContentComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/no-content/no-content.component.ts","import {Injectable} from '@angular/core';\nimport {Cource} from './cource';\nimport {Observable} from \"rxjs/Observable\";\n\n@Injectable()\nexport class DataService{\n    private currenUser: string = \"\";        \n    private data: Cource[] = [\n        {id: 1 ,  name: \"Video Cource 1\", courceDate: \"01.01.2011\", description: \"Couurce 1 description\", duration: 100},\n        {id: 2 ,  name: \"Video Cource 2\", courceDate: \"01.02.2011\", description: \"Couurce 2 description\", duration: 200},\n        {id: 4 ,  name: \"Video Cource 3\", courceDate: \"01.03.2011\", description: \"Couurce 3 description\", duration: 300},\n        {id: 5 ,  name: \"Video Cource 4\", courceDate: \"01.04.2011\", description: \"Couurce 4 description\", duration: 400}\t\t\n    ];\n    getData(): Cource[] {\n        \n        return this.data;\n    }\n    getItemData(id: number): Cource {\n        var getCources: Cource[];       \n        getCources = this.data.filter(function( obj ) { return obj.id == id;});\n        return getCources[0];\n    }\n    addData(name: string, courceDate: string, description: string, duration: number ){        \n        var newId: number;\n        var tempCource: Cource;\n        tempCource = this.data[this.data.length-1];\n        newId = tempCource.id+1;\n        this.data.push(new Cource(newId,name, courceDate,description,duration));\n    }\n    editData(id: number, name: string, courceDate: string, description: string, duration: number ){     \n       \n      var editId;\n      var editCource: Cource;\n      var editCources: Cource[];      \n\n      for (var i in this.data) {\n        if (this.data[i].id == id) {\n            editId = i;\n            }\n        }\n\n      this.data[editId].name = name;\n      this.data[editId].courceDate = courceDate;\n      this.data[editId].description = description;\n      this.data[editId].duration = duration;\n      \n    }\n    deleteData(id: number)\n    {\n         var deleteId;\n               for (var i in this.data) {\n        if (this.data[i].id == id) {\n            deleteId = i;\n            }\n        }\n         this.data.splice(Number(deleteId), 1);\n    }\n\n    isAuth()\n    {\n        if (this.currenUser==\"\")\n          return false;\n        else\n          return true;\n    }\n    logIn(name: string, pass:string)\n    {\n        if (name == \"q\" && pass == \"q\")\n        this.currenUser=name;        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/app/main.service.ts","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"html, body{\\n  height: 100%;\\n  font-family: Arial, Helvetica, sans-serif\\n}\\n\\nspan.active {\\n  background-color: gray;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/app.component.css\n// module id = 660\n// module chunks = 1","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 661\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = 667\n// module chunks = 1","\n        var result = require(\"!!./../../node_modules/css-loader/index.js!./app.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 681\n// module chunks = 1","/*\n * Angular bootstraping\n */\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { decorateModuleRef } from './app/environment';\nimport { bootloader } from '@angularclass/hmr';\n/*\n * App Module\n * our top level module that holds all of our components\n */\nimport { AppModule } from './app';\n\n/*\n * Bootstrap our Angular app with a top level NgModule\n */\nexport function main(): Promise<any> {\n  return platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .then(decorateModuleRef)\n    .catch(err => console.error(err));\n}\n\n// needed for hmr\n// in prod this is replace for document ready\nbootloader(main);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src!./src/main.browser.ts"],"mappings":";;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;;;;;;ACpDA;;;;;;;;;;ACAA;AAOA;AAGA;AAFA;AAIA;AAGA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAjCA;AADA;;AAkCA;AAjCA;;;;;;;;;;ACPA;AAEA;AACA;AAGA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAAA;AAlBA;AADA;AAGA;AAgBA;AAlBA;;;;;;;;;;;;;;ACNA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;ACDA;AACA;AACA;AA0BA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAdA;AAtBA;AACA;AACA;AAEA;AAiBA;AAEA;AAaA;AAdA;;;;;;;;;;;AC5BA;;AAEA;AACA;AAEA;AAEA;;;AAGA;AA0CA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAXA;AAzCA;AACA;AACA;AACA;AACA;AACA;AACA;AAkCA;AAIA;AAQA;AAXA;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAQA;;AAEA;AACA;AA0BA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAtCA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAqCA;AAtCA;;;;;;;;;;;ACvEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAPA;AADA;;AAQA;AAPA;AASA;AACA;AACA;AACA;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;;;;;;;;;;ACAA;AACA;AACA;AA2EA;AAIA;AAAA;AAAA;AADA;AAGA;AACA;;;;;;;;;;AAUA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AA/CA;AAvEA;AACA;AACA;AAqCA;AA+BA;AAKA;AA2CA;AA/CA;;;;;;;;;;;AC7EA;AAGA;AAAA;AAWA;AAVA;AAEA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAXA;AADA;;AAYA;AAXA;;;;;;;;;;ACHA;AACA;AAEA;AA0BA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAjCA;AAtBA;AACA;AACA;AAEA;AAiBA;AAUA;AAwBA;AAjCA;;;;;;;;;;;AC7BA;AACA;AAEA;AAiBA;AAMA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AArBA;AAdA;AACA;AACA;AAEA;AASA;AAOA;AAeA;AArBA;;;;;;;;;;;ACpBA;AACA;AACA;AAiBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAhBA;AAZA;AACA;AACA;AAEA;AAOA;AAEA;AAeA;AAhBA;;;;;;;;;;;ACnBA;AAUA;AAAA;AAEA;AAAA;AAAA;AAFA;AARA;AACA;AACA;AAKA;;AAGA;AAFA;;;;;;;;;;ACVA;AACA;AAIA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA0DA;AAzDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAjEA;AADA;;AAkEA;AAjEA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","sourceRoot":""}